---
import { SITE } from "@config";
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import Layout from "./Layout.astro";

export interface Props {
  title?: string;
  description?: string;
  frontmatter?: {
    title: string;
    description?: string;
  };
}

const { title, description, frontmatter } = Astro.props;
const pageTitle = (title ?? frontmatter?.title ?? "Doctoral Thesis");
const pageDesc  = (description ?? frontmatter?.description ?? "PhD thesis â€” details and abstract");
const bibtex = "@ARTICLE{2025arXiv250807998M,author = {{Mas-Buitrago}, Pedro},title = {Virtual Observatory and machine learning for the study of low-mass objects in photometric and spectroscopic surveys},journal = {arXiv e-prints},keywords = {Solar and Stellar Astrophysics, Earth and Planetary Astrophysics, Astrophysics of Galaxies, Instrumentation and Methods for Astrophysics},year = 2025,month = aug,eid = {arXiv:2508.07998},doi = {10.48550/arXiv.2508.07998},archivePrefix = {arXiv},eprint = {2508.07998},primaryClass = {astro-ph.SR},adsurl = {https://ui.adsabs.harvard.edu/abs/2025arXiv250807998M},adsnote = {Provided by the SAO/NASA Astrophysics Data System}}"
---

<Layout title={`${pageTitle} | ${SITE.title}`} description={pageDesc}>
  <Header activeNav="thesis" />

  <main id="main-content" class="mx-auto px-4 pb-12">

    <section id="about" class="prose max-w-3xl mb-8 prose-img:border-0">
      <h1 class="text-2xl mt-5 tracking-wider sm:text-3xl">{pageTitle}</h1>
    </section>
    
    <!-- Meta (transparent "card": only border) -->
    <section class="rounded-2xl border border-skin-line/40 shadow-none">
      <div class="p-5 sm:p-6">
        <slot name="meta" />
        
        <!-- Citation Section -->
        <div class="mt-4 pt-4 border-t border-skin-line/30">
          <h3 class="text-sm font-semibold text-skin-base mb-2">Citation</h3>
          <div class="flex flex-col gap-2">
            <p class="text-sm text-skin-muted font-mono bg-skin-card/30 p-2 rounded">
              Mas-Buitrago, P. (2025). "Virtual Observatory and machine learning for the study of low-mass objects in photometric and spectroscopic surveys". arXiv:2508.07998
            </p>
            <div class="flex flex-wrap gap-2">
              <button 
                id="copy-bibtex-btn"
                class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                       hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105"
                title="Copy BibTeX"
              >
                <span>BibTeX</span>
              </button>
              <a 
                href="https://doi.org/10.48550/arXiv.2508.07998"
                target="_blank"
                class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                       hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105"
              >
                arXiv
              </a>
              <a 
                href="https://ui.adsabs.harvard.edu/abs/2025arXiv250807998M"
                target="_blank"
                class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                       hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105"
              >
                ADS
              </a>
            </div>
          </div>
        </div>
      </div>
      
      <script>
        // BibTeX citation data
        const bibtexCitation = `@ARTICLE{2025arXiv250807998M,
   author = {{Mas-Buitrago}, Pedro},
    title = "{Virtual Observatory and machine learning for the study of low-mass objects in photometric and spectroscopic surveys}",
  journal = {arXiv e-prints},
 keywords = {Solar and Stellar Astrophysics, Earth and Planetary Astrophysics, Astrophysics of Galaxies, Instrumentation and Methods for Astrophysics},
     year = 2025,
    month = aug,
      eid = {arXiv:2508.07998},
    pages = {arXiv:2508.07998},
      doi = {10.48550/arXiv.2508.07998},
archivePrefix = {arXiv},
   eprint = {2508.07998},
 primaryClass = {astro-ph.SR},
   adsurl = {https://ui.adsabs.harvard.edu/abs/2025arXiv250807998M},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}`;
        
        // Copy BibTeX to clipboard
        document.addEventListener('DOMContentLoaded', () => {
          const copyBibtexBtn = document.getElementById('copy-bibtex-btn');
          if (copyBibtexBtn) {
            copyBibtexBtn.addEventListener('click', async () => {
              const originalText = copyBibtexBtn.textContent;
              
              try {
                // Modern approach - works in most browsers
                await navigator.clipboard.writeText(bibtexCitation);
                
                // Success feedback
                copyBibtexBtn.textContent = 'Copied!';
                copyBibtexBtn.classList.add('bg-skin-card', 'dark:bg-gray-800', 'scale-105');
                
                setTimeout(() => {
                  copyBibtexBtn.textContent = originalText;
                  copyBibtexBtn.classList.remove('bg-skin-card', 'dark:bg-gray-800', 'scale-105');
                }, 5000);
                
              } catch (err) {
                // If clipboard API fails (e.g., not HTTPS or permission denied)
                console.error('Clipboard API failed:', err);
                
                // Show the BibTeX in a prompt for manual copying
                const userCopied = window.prompt(
                  'Copy the BibTeX citation below (Ctrl+C/Cmd+C):', 
                  bibtexCitation
                );
                
                // If user didn't cancel the prompt, assume they copied
                if (userCopied !== null) {
                  copyBibtexBtn.textContent = 'Copied!';
                  copyBibtexBtn.classList.add('bg-skin-card', 'dark:bg-gray-800', 'scale-105');
                  
                  setTimeout(() => {
                    copyBibtexBtn.textContent = originalText;
                    copyBibtexBtn.classList.remove('bg-skin-card', 'dark:bg-gray-800', 'scale-105');
                  }, 5000);
                }
              }
            });
          }
        });
      </script>
      </div>
    </section>

    <!-- PDF Access Section -->
    <section class="rounded-2xl border border-skin-line/40 shadow-none mb-12">
      <div class="p-5 sm:p-6">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-xl sm:text-2xl font-semibold">Full Thesis</h2>
          <div class="flex gap-2">
            <a 
              href="/thesis.pdf" 
              download="Mas-Buitrago_PhD_Thesis.pdf"
              class="flex items-center gap-1.5 px-3 py-1.5 text-sm rounded-lg bg-skin-accent text-skin-inverted
                     transition-all duration-200 transform hover:opacity-90 hover:scale-105"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
              </svg>
              <span>Download PDF</span>
            </a>
          </div>
        </div>
        
        <!-- Quick access links to specific sections -->
        <div class="flex flex-wrap gap-2 mb-4">
          <span class="text-skin-muted">Quick access:</span>
          <button 
            onclick="window.open('/thesis.pdf#page=9', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            Abstract
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=11', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            Introduction
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=31', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            Ultracool Dwarfs in J-PLUS
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=57', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            Flaring M dwarfs
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=75', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            DTL for M Dwarfs
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=93', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            DTL for Ultracool Dwarfs
          </button>
          <button 
            onclick="window.open('/thesis.pdf#page=101', '_blank')"
            class="px-3 py-1.5 text-sm rounded-full border border-skin-line/60 
                   hover:bg-skin-card dark:hover:bg-gray-800 transition-colors hover:scale-105">
            Conclusions and Future Work
          </button>
        </div>
        
   </section>

    <section class="thesis-chat mb-10 max-w-2xl mx-auto relative">
      <div class="chat-background">
        <span class="star star-1"></span>
        <span class="star star-2"></span>
        <span class="star star-3"></span>
        <span class="star star-4"></span>
        <span class="star star-5"></span>
      </div>
      
      <div class="chat-content">
        <h2 class="text-xl sm:text-2xl font-semibold mb-4 text-center flex items-center justify-center gap-3">
          <span class="rocket-icon">
            <svg class="w-6 h-6 sm:w-7 sm:h-7" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path class="rocket-body" d="M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a1.96 1.96 0 0 0-2.91-.09z" 
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path class="rocket-body" d="M12 15l-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z" 
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path class="rocket-window" d="M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5" 
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <circle class="rocket-window" cx="16" cy="8" r="1.5" fill="currentColor"/>
              <!-- Enhanced gradient flames -->
              <defs>
                <linearGradient id="flame-gradient" x1="0%" y1="0%" x2="0%" y2="100%">
                  <stop offset="0%" style="stop-color:rgb(251, 191, 36);stop-opacity:1" />
                  <stop offset="100%" style="stop-color:rgb(239, 68, 68);stop-opacity:1" />
                </linearGradient>
              </defs>
              <path class="rocket-flame flame-1" d="M3 21c0-2 1-3 1-3" 
                    stroke="url(#flame-gradient)" stroke-width="2" stroke-linecap="round" opacity="0"/>
              <path class="rocket-flame flame-2" d="M1 21c0-2 1-4 1-4" 
                    stroke="url(#flame-gradient)" stroke-width="2" stroke-linecap="round" opacity="0"/>
              <path class="rocket-flame flame-3" d="M2 22c0-1 .5-2 .5-2" 
                    stroke="url(#flame-gradient)" stroke-width="2" stroke-linecap="round" opacity="0"/>
              <!-- Smoke particles -->
              <circle class="smoke-particle smoke-1" cx="3" cy="22" r="0.5" fill="currentColor" opacity="0"/>
              <circle class="smoke-particle smoke-2" cx="2" cy="23" r="0.7" fill="currentColor" opacity="0"/>
              <circle class="smoke-particle smoke-3" cx="4" cy="23" r="0.4" fill="currentColor" opacity="0"/>
            </svg>
          </span>
          Talk with my thesis
          <span class="ai-pulse-dot"></span>
        </h2>

        <!-- Chat form with gradient border -->
        <form id="thesis-form" class="flex gap-2 items-center">
          <div class="input-wrapper flex-1 relative">
            <input
              type="text"
              id="thesis-query"
              name="query"
              placeholder="Ask about J-PLUS, CARMENES, UCDsâ€¦"
              class="w-full rounded-lg border-2 border-skin-line px-4 py-2.5
                    text-sm sm:text-base focus:outline-none
                    bg-transparent placeholder:text-gray-500 dark:placeholder:text-gray-400
                    transition-all duration-300 relative z-10"
            />
          </div>
          <button
            type="submit"
            id="ask-button"
            class="rounded-lg bg-skin-accent text-skin px-5 py-2.5
                  text-sm sm:text-base font-medium transition-all duration-200 transform
                  hover:opacity-90 hover:scale-105 hover:shadow-lg
                  disabled:opacity-50 disabled:cursor-not-allowed relative z-10"
          >
            Ask
          </button>
        </form>

        <!-- Suggested questions -->
        <div class="flex flex-wrap gap-2 mt-3">
          <span class="text text-skin-muted">Try asking:</span>
          <button 
            type="button"
            onclick="document.getElementById('thesis-query').value = 'What are ultracool dwarfs?'; document.getElementById('thesis-form').dispatchEvent(new Event('submit'));"
            class="text-sm px-3 py-1 rounded-full bg-skin-card border border-skin-line/30
                   hover:bg-skin-accent hover:text-skin transition-all duration-200 hover:scale-105">
            What are ultracool dwarfs?
          </button>
          <button 
            type="button"
            onclick="document.getElementById('thesis-query').value = 'What is the Virtual Observatory?'; document.getElementById('thesis-form').dispatchEvent(new Event('submit'));"
            class="text-sm px-3 py-1 rounded-full bg-skin-card border border-skin-line/30
                   hover:bg-skin-accent hover:text-skin transition-all duration-200 hover:scale-105">
            The Virtual Observatory
          </button>
          <button 
            type="button"
            onclick="document.getElementById('thesis-query').value = 'What are the key characteristics of the J-PLUS survey?'; document.getElementById('thesis-form').dispatchEvent(new Event('submit'));"
            class="text-sm px-3 py-1 rounded-full bg-skin-card border border-skin-line/30
                   hover:bg-skin-accent hover:text-skin transition-all duration-200 hover:scale-105">
            Key characteristics of J-PLUS
          </button>
        </div>

        <!-- Answer container -->
        <div id="thesis-answer" class="mt-6 text-base leading-relaxed"></div>
      </div>
    </section>

      <script type="module">
        import { marked } from "https://cdn.jsdelivr.net/npm/marked@12.0.2/lib/marked.esm.js";
        const form = document.getElementById("thesis-form");
        const input = document.getElementById("thesis-query");
        const answerBox = document.getElementById("thesis-answer");

        function asPath(md = {}) {
          const parts = [];
          if (md.chapter_key || md.chapter) parts.push(`Ch.${md.chapter_key ?? ""}: ${md.chapter ?? ""}`.trim());
          if (md.section_key || md.section) parts.push(`S.${md.section_key ?? ""}: ${md.section ?? ""}`.trim());
          if (md.subsection_key || md.subsection) parts.push(`SS.${md.subsection_key ?? ""}: ${md.subsection ?? ""}`.trim());
          return parts.filter(p => p && !p.endsWith(":")).join(" | ");
        }

        form.addEventListener("submit", async (e) => {
          e.preventDefault();
          const query = input.value.trim();
          if (!query) return;

          // reset UI
          answerBox.innerHTML = `
            <div class="typing-indicator-wrapper">
              <div class="typing-indicator">
                <span></span>
                <span></span>
                <span></span>
              </div>
              <span class="text-skin-muted ml-2">AI is thinking...</span>
            </div>
          `;

          // Add particle effect on send
          const button = document.getElementById('ask-button');
          button.classList.add('particle-burst');
          setTimeout(() => button.classList.remove('particle-burst'), 1000);

          try {
            const resp = await fetch("/api/ask", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ query }),
            });
            const data = await resp.json();

            if (!resp.ok) {
              throw new Error(data.error || resp.statusText);
            }

            // Render answer (Markdown â†’ HTML)
            const rawAnswer = data.answer || "No answer.";
            const answerHtml = marked.parse(rawAnswer);

            // Render sources as numbered list
            const sources = Array.isArray(data.sources) ? data.sources : [];
            const listItems = sources.map((s, i) => {
              const label = s.path || asPath(s.meta ?? s.metadata ?? {}) || "(no path)";
              return `<li class="mb-2">[${i + 1}] ${label}</li>`;
            }).join("");

            const sourcesHtml = sources.length
              ? `<div class="mt-4">
                  <div class="text-sm font-semibold mb-1">Sources - chunks of text used as context were extracted from:</div>
                  <ol class="list-decimal pl-5 text-sm leading-relaxed">${listItems}</ol>
                </div>`
              : "";

            answerBox.innerHTML = `<div class="prose prose-neutral dark:prose-invert">${answerHtml}</div>${sourcesHtml}`;
          } catch (err) {
            answerBox.innerHTML = `<div class="text-red-600 text-sm">Error: ${err.message}</div>`;
          }
        });
      </script>
    </section>

    <!-- Optional extra content below -->
    <section class="prose prose-neutral dark:prose-invert max-w-none mt-10">
      <slot />
    </section>
  </main>

  <Footer />
</Layout>

<style>
  /* Make ThesisAsk look like a chat box without changing its JSX */
  .thesis-chat {
    position: relative;
    background: rgba(var(--color-fill), 0.3);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(var(--color-border), 0.2);
    border-radius: 1rem;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.07);
  }

  .chat-content {
    position: relative;
    z-index: 1;
    padding: 2rem;
  }

  /* Parallax stars background */
  .chat-background {
    position: absolute;
    inset: 0;
    overflow: hidden;
    border-radius: 1rem;
    pointer-events: none;
    z-index: 0;
  }

  .star {
    position: absolute;
    width: 2px;
    height: 2px;
    background: white;
    border-radius: 50%;
    opacity: 0;
    animation: twinkle-star 3s ease-in-out infinite;
  }

  .star-1 { top: 20%; left: 10%; animation-delay: 0s; }
  .star-2 { top: 40%; left: 80%; animation-delay: 0.5s; }
  .star-3 { top: 60%; left: 30%; animation-delay: 1s; }
  .star-4 { top: 80%; left: 70%; animation-delay: 1.5s; }
  .star-5 { top: 30%; left: 50%; animation-delay: 2s; }

  @keyframes twinkle-star {
    0%, 100% { opacity: 0; transform: scale(0.5); }
    50% { opacity: 0.8; transform: scale(1.2); }
  }

  /* Animated gradient border on focus */
  .input-wrapper {
    position: relative;
  }

  .input-wrapper::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 0.5rem;
    padding: 2px;
    background: linear-gradient(45deg, 
      rgb(var(--color-accent)), 
      rgb(var(--color-accent-2, var(--color-accent))), 
      rgb(var(--color-accent))
    );
    background-size: 200% 200%;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
    animation: gradient-border 3s ease infinite;
  }

  .input-wrapper:focus-within::before {
    opacity: 1;
  }

  @keyframes gradient-border {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Typing indicator */
  .typing-indicator-wrapper {
    display: flex;
    align-items: center;
  }

  .typing-indicator {
    display: inline-flex;
    gap: 4px;
  }

  .typing-indicator span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: rgb(var(--color-accent));
    animation: typing-bounce 1.4s ease-in-out infinite;
  }

  .typing-indicator span:nth-child(1) { animation-delay: -0.32s; }
  .typing-indicator span:nth-child(2) { animation-delay: -0.16s; }
  .typing-indicator span:nth-child(3) { animation-delay: 0; }

  @keyframes typing-bounce {
    0%, 80%, 100% {
      transform: scale(0.8);
      opacity: 0.5;
    }
    40% {
      transform: scale(1);
      opacity: 1;
    }
  }

  /* Particle burst effect */
  @keyframes particle-burst {
    0% {
      box-shadow: 0 0 0 0 rgba(var(--color-accent), 0.4);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(var(--color-accent), 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(var(--color-accent), 0);
    }
  }

  .particle-burst {
    animation: particle-burst 0.5s ease-out;
  }

  /* Enhanced Rocket Launch Animation with smoke */
  .rocket-icon {
    display: inline-flex;
    animation: rocket-hover 3s ease-in-out infinite;
  }
  
  .rocket-body {
    animation: rocket-shake 0.15s ease-in-out infinite;
  }
  
  .rocket-window {
    animation: window-glow 2s ease-in-out infinite;
  }
  
  .rocket-flame {
    transform-origin: 4px 21px;
  }
  
  .flame-1 {
    animation: flame-flicker 0.3s ease-in-out infinite;
  }
  
  .flame-2 {
    animation: flame-flicker 0.3s ease-in-out infinite 0.1s;
  }
  
  .flame-3 {
    animation: flame-flicker 0.3s ease-in-out infinite 0.2s;
  }

  /* Smoke particles */
  .smoke-particle {
    transform-origin: center;
  }

  .rocket-icon:hover .smoke-particle {
    animation: smoke-rise 1s ease-out forwards;
  }

  .smoke-1 { animation-delay: 0s; }
  .smoke-2 { animation-delay: 0.2s; }
  .smoke-3 { animation-delay: 0.4s; }

  @keyframes smoke-rise {
    0% {
      opacity: 0;
      transform: translateY(0) scale(0.5);
    }
    50% {
      opacity: 0.5;
    }
    100% {
      opacity: 0;
      transform: translateY(-10px) translateX(5px) scale(1.5);
    }
  }
  
  @keyframes rocket-hover {
    0%, 100% { 
      transform: translateY(0px) rotate(-45deg);
    }
    25% {
      transform: translateY(-2px) rotate(-45deg);
    }
    50% { 
      transform: translateY(-4px) rotate(-45deg);
    }
    75% {
      transform: translateY(-2px) rotate(-45deg);
    }
  }
  
  @keyframes rocket-shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-0.5px); }
    75% { transform: translateX(0.5px); }
  }
  
  @keyframes window-glow {
    0%, 100% { 
      filter: drop-shadow(0 0 2px rgba(59, 130, 246, 0.5));
    }
    50% { 
      filter: drop-shadow(0 0 6px rgba(59, 130, 246, 0.8));
    }
  }
  
  @keyframes flame-flicker {
    0%, 100% { 
      opacity: 0.8;
      transform: scaleY(1);
    }
    50% { 
      opacity: 1;
      transform: scaleY(1.2);
    }
  }
  
  /* Hover effect - launch the rocket! */
  .rocket-icon:hover {
    animation: rocket-launch 0.8s ease-out forwards;
  }
  
  .rocket-icon:hover .flame-1,
  .rocket-icon:hover .flame-2,
  .rocket-icon:hover .flame-3 {
    opacity: 1 !important;
  }
  
  @keyframes rocket-launch {
    0% { 
      transform: translateY(0px) rotate(-45deg);
    }
    40% {
      transform: translateY(2px) rotate(-45deg);
    }
    100% { 
      transform: translateY(-8px) rotate(-45deg);
    }
  }
  
  .ai-pulse-dot {
    display: inline-block;
    width: 8px;
    height: 8px;
    background: rgb(34, 197, 94);
    border-radius: 50%;
    animation: pulse-glow 2s ease-in-out infinite;
  }
  
  @keyframes pulse-glow {
    0%, 100% { 
      opacity: 1;
      box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.4);
    }
    50% { 
      opacity: 0.8;
      box-shadow: 0 0 0 6px rgba(34, 197, 94, 0);
    }
  }

  /* Normalize headings inside LLM output */
  .thesis-chat .prose h3,
  .thesis-chat .prose h4 {
    @apply mt-3 mb-2;
  }

  /* Input + button inside ThesisAsk â†’ "chat bar" vibe */
  .thesis-chat input[type="text"],
  .thesis-chat input:not([type]),
  .thesis-chat textarea {
    @apply w-full rounded-xl border border-skin-line/60 bg-transparent
           px-3 py-2 outline-none
           focus-visible:ring-1 focus-visible:ring-gray-400 dark:focus-visible:ring-gray-600;
  }

  .thesis-chat button {
    @apply rounded-xl border border-skin-line/60 bg-transparent
           px-4 py-2 transition-all duration-200 transform
           hover:bg-gray-200/40 dark:hover:bg-gray-700/40 hover:scale-105;
  }

  /* Typical layout for an input row (if ThesisAsk uses a flex row) */
  .thesis-chat .flex.gap-2,
  .thesis-chat .flex.gap-3 {
    @apply items-center;
  }

  /* If ThesisAsk prints "Answer" and "Sources", space them nicely */
  .thesis-chat h3,
  .thesis-chat h4 {
    @apply text-base font-semibold;
  }
  .thesis-chat ol {
    @apply list-decimal pl-5;
  }

  .thesis-chat ol li div {
    font-size: 0.875rem; /* small */
    line-height: 1.4;
  }

  /* Rotate animation for toggle icon */
  .toggle-icon {
    transition: transform 0.2s ease-in-out;
  }
  
  .toggle-icon.rotate-180 {
    transform: rotate(180deg);
  }

  /* Abstract content - no CSS transitions needed, using Web Animations API */
  .abstract-content {
    position: relative;
  }

  /* Scrollbar for abstract (only where supported) */
  @supports selector(::-webkit-scrollbar) {
    .abstract-content[aria-expanded="true"] [role="region"]::-webkit-scrollbar,
    .abstract-inner::-webkit-scrollbar { 
      width: 8px; 
    }
    .abstract-content[aria-expanded="true"] [role="region"]::-webkit-scrollbar-thumb,
    .abstract-inner::-webkit-scrollbar-thumb {
      background: color-mix(in oklab, currentColor 20%, transparent);
      border-radius: 8px;
    }
  }
</style>